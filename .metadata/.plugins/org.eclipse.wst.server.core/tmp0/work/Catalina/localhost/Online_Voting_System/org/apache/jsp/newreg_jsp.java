/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2022-12-30 09:45:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class newreg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/adminnav.jsp", Long.valueOf(1672228327368L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<link rel = \"stylesheet\" type = \"text/css\" href = \"style.css?v=<?=$version?>\">\r\n");
      out.write("<title>New Register</title>\r\n");
      out.write("<style>\r\n");
      out.write("/*chrome,safari,edge,opera*/\r\n");
      out.write("input::-webkit-outer-spin-button,input::-webkit-inner-spin-button\r\n");
      out.write("{\r\n");
      out.write("-webkit-appearance: none;\r\n");
      out.write("margin: 0;\r\n");
      out.write("}\r\n");
      out.write("/*firfox*/\r\n");
      out.write("input[type=number]\r\n");
      out.write("{\r\n");
      out.write("-moz-appearance: textfield;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<link rel = \"stylesheet\" type = \"text/css\" href = \"style.css?v=<?=$version?>\">\r\n");
      out.write("\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<nav>\r\n");
      out.write("  <a href=\"home.jsp\">Home</a> |\r\n");
      out.write("  <a href=\"about.jsp\">About</a> |\r\n");
      out.write("  <a href=\"newreg.jsp\">New Register</a> |\r\n");
      out.write("  <a href=\"logout.jsp\">Logout</a> \r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<div class = \"formBack\">\r\n");
      out.write("<form action=\"registerVoter\" method=\"post\">\r\n");
      out.write("<h5>Please Fill The Details</h5>\r\n");
      out.write("<label for=\"fname\" style=\"font-size:25px;\">Name :</label>\r\n");
      out.write("<input name = \"fname\" id = \"fname\" type = \"text\" style=\"margin-left:180px;\">\r\n");
      out.write("<br>\r\n");
      out.write("<label for=\"phone\" style=\"font-size:25px;\">Phone Number :</label>\r\n");
      out.write("<input name = \"phone\" id = \"phone\" type = \"number\" style=\"margin-left:88px;\">\r\n");
      out.write("<br>\r\n");
      out.write("<label for=\"emailid\" style=\"font-size:25px;\">Email :</label>\r\n");
      out.write("<input name = \"emailid\" id = \"emailid\" type = \"email\" style=\"margin-left:180px;\">\r\n");
      out.write("<br>\r\n");
      out.write("<label for=\"gender\" style=\"font-size:25px;\">Gender :</label>\r\n");
      out.write("\r\n");
      out.write("<input type=\"radio\" id=\"male\" name=\"gender\" value=\"M\"style=\"margin-left: 75px;\">\r\n");
      out.write("  <label for=\"male\" style=\"font-size:20px; margin-left:-95px;\">Male</label>\r\n");
      out.write("  \r\n");
      out.write("  <input type=\"radio\" id=\"female\" name=\"gender\" value=\"F\" style=\"margin-left:-90px;\">\r\n");
      out.write("    <label for=\"female\"style=\"font-size:20px; margin-left:-95px;\">Female</label>\r\n");
      out.write("    \r\n");
      out.write("  <input type=\"radio\" id=\"transgender\" name=\"gender\" value=\"T\"  style=\"margin-left:-90px;\">\r\n");
      out.write("  <label for=\"transgender\"style=\"font-size:20px; margin-left:-95px;\">Transgender</label>\r\n");
      out.write("  \r\n");
      out.write("  <br>\r\n");
      out.write("  <label for=\"dateof\"style=\"font-size:25px;\">Date Of Birth :</label>\r\n");
      out.write("<input name = \"dateof\" id = \"dateof\" type = \"date\" style=\"margin-left:102px;\">\r\n");
      out.write("<br>\r\n");
      out.write("  <label for=\"add\" style=\"font-size:25px;\">Address :</label>\r\n");
      out.write("<input name = \"add\" id = \"add\" type = \"text\" style=\"margin-left:160px;height:70px; width:200px;text-align:left; margin-top:8px;\">\r\n");
      out.write("<br>\r\n");
      out.write("<label for=\"voternum\" style=\"font-size:25px;\">Voter id Number :</label>\r\n");
      out.write("<input name = \"voternum\" id = \"voternum\" type = \"text\" style=\"margin-left:73px;\">\r\n");
      out.write("<br>\r\n");
      out.write("<button type = \"submit\" Style=\"margin-left:220px;\">Submit</button>\r\n");
      out.write("<button type = \"Reset\" >Clear</button>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
